load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go-plugin",
    srcs = [
        "client.go",
        "discover.go",
        "error.go",
        "grpc_broker.go",
        "grpc_client.go",
        "grpc_controller.go",
        "grpc_server.go",
        "grpc_stdio.go",
        "log_entry.go",
        "mtls.go",
        "mux_broker.go",
        "notes_unix.go",
        "notes_windows.go",
        "plugin.go",
        "process.go",
        "process_posix.go",
        "process_windows.go",
        "protocol.go",
        "rpc_client.go",
        "rpc_server.go",
        "server.go",
        "server_mux.go",
        "stream.go",
        "testing.go",
    ],
    importmap = "github.com/hashicorp/terraform-provider-azurerm/vendor/github.com/hashicorp/go-plugin",
    importpath = "github.com/hashicorp/go-plugin",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/protobuf/ptypes/empty",
        "//vendor/github.com/hashicorp/go-hclog",
        "//vendor/github.com/hashicorp/go-plugin/internal/plugin",
        "//vendor/github.com/hashicorp/yamux",
        "//vendor/github.com/mitchellh/go-testing-interface",
        "//vendor/github.com/oklog/run",
        "//vendor/golang.org/x/net/context",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/credentials",
        "//vendor/google.golang.org/grpc/health",
        "//vendor/google.golang.org/grpc/health/grpc_health_v1",
        "//vendor/google.golang.org/grpc/reflection",
        "//vendor/google.golang.org/grpc/status",
    ],
)
